version: "3.9"
services:
  
  # DATABASES
  admindb:
    image: postgres
    container_name: admindb
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=admindb
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - ./volumes/admindb/data:/var/lib/postgresql/data
    restart: always
  builderdb:
    image: postgres
    container_name: builderdb
    environment:
        - POSTGRES_PASSWORD=password
        - POSTGRES_USER=postgres
        - POSTGRES_DB=builderdb
        - PGDATA=/var/lib/postgresql/data
    volumes:
        - ./volumes/builderdb/data:/var/lib/postgresql/data
    restart: always
  runnerdb:
    image: postgres
    container_name: runnerdb
    environment:
        - POSTGRES_PASSWORD=password
        - POSTGRES_USER=postgres
        - POSTGRES_DB=runnerdb
        - PGDATA=/var/lib/postgresql/data
    volumes:
        - ./volumes/runnerdb/data:/var/lib/postgresql/data
    restart: always
  sitedb:
    image: postgres
    container_name: sitedb
    environment:
        - POSTGRES_PASSWORD=password
        - POSTGRES_USER=postgres
        - POSTGRES_DB=sitedb
        - PGDATA=/var/lib/postgresql/data
    volumes:
        - ./volumes/sitedb/data:/var/lib/postgresql/data
    restart: always
  
  # Backend apps
  admin-api: 
    build: ./admin
    container_name: admin-api
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://admindb:5432/admindb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - ADMIN_LOGIN=admin
      - ADMIN_PASSWORD=$$2a$$10$$qq//P.sGWolwxMJ2gMGjFOpKRGLiZq9E42IOE0GzsQtBB3KicYtG2
    ports:
      - 8080:8080
    depends_on:
      - admindb
    volumes: 
      - ./volumes/admin/configurations:/app/configurations
  builder-api:
    build: ./builder
    container_name: builder-api
    extra_hosts: 
      - "host.docker.internal:host-gateway"
    environment:
        - SPRING_DATASOURCE_URL=jdbc:postgresql://builderdb:5432/builderdb
        - SPRING_DATASOURCE_USERNAME=postgres
        - SPRING_DATASOURCE_PASSWORD=password
        - DOCKER_HOST=tcp://host.docker.internal:2375
        - DOCKER_USER=shrail
        - DOCKER_PASSWORD=3857rail
        - ADMIN_HOST=http://admin-api:8080/api/admin
    ports:
        - 8081:8080
    depends_on:
        - builderdb
    volumes: 
      - ./volumes/builder/builds/logs:/app/builds/logs
  runner-api:
    build: ./runner
    container_name: runner-api
    extra_hosts: 
      - "host.docker.internal:host-gateway"
    environment:
        - SPRING_DATASOURCE_URL=jdbc:postgresql://runnerdb:5432/runnerdb
        - SPRING_DATASOURCE_USERNAME=postgres
        - SPRING_DATASOURCE_PASSWORD=password
        - DOCKER_HOST=tcp://host.docker.internal:2375
        - DOCKER_USER=shrail
        - DOCKER_PASSWORD=3857rail
        - BUILDER_HOST=http://builder-api:8080/api/builder
    ports:
        - 8082:8080
    depends_on:
        - runnerdb
    volumes: 
      - ./volumes/runner/apps:/app/apps
  site:
    build: ./site
    container_name: site
    environment:
        - SPRING_DATASOURCE_URL=jdbc:postgresql://sitedb:5432/sitedb
        - SPRING_DATASOURCE_USERNAME=postgres
        - SPRING_DATASOURCE_PASSWORD=password
    ports:
        - 8083:8083
    depends_on:
        - sitedb
  
  # Frontend apps
  admin:
    build: ./admin-client
    container_name: admin
    ports: 
      - 4200:80
    depends_on: 
      - admin-api
    volumes: 
      - ./client.conf:/etc/nginx/nginx.conf
  runner: 
    build:  ./runner-client
    container_name: runner
    depends_on: 
      - runner-api
    ports: 
      - 4201:80
    volumes: 
      - ./client.conf:/etc/nginx/nginx.conf

  # Proxy
  nginx: 
    image: nginx
    container_name: nginx
    volumes: 
      - ./proxy/v3.conf:/etc/nginx/nginx.conf:ro
    ports: 
      - 80:80
    depends_on: 
      - admin
      - runner
      - site